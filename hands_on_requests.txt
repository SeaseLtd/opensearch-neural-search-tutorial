## ------------- MODEL MANAGEMENT

# UPLOAD A MODEL
POST /_plugins/_ml/models/_upload
{
  "name": "all-MiniLM-L6-v2",
  "version": "1.0.0",
  "description": "testing neural model from url",
  "model_format": "TORCH_SCRIPT",
  "model_config": {
    "model_type": "bert",
    "embedding_dimension": 384,
    "framework_type": "sentence_transformers"
  },
  "url": "https://github.com/opensearch-project/ml-commons/raw/2.x/ml-algorithms/src/test/resources/org/opensearch/ml/engine/algorithms/text_embedding/all-MiniLM-L6-v2_torchscript_sentence-transformer.zip?raw=true"
}

# GET THE MODEL ID
GET /_plugins/_ml/tasks/aUQJLYYB2BgnpGRA2kIi

# GET ALL MODELS
GET /_plugins/_ml/models/_search
{
  "query": {
    "match_all": {}
  },
  "size": 1000
}

# LOAD THE MODEL
POST /_plugins/_ml/models/akQJLYYB2BgnpGRA2kJK/_load

# CHECK MODEL LOAD STATUS
GET /_plugins/_ml/tasks/a0QKLYYB2BgnpGRAMEIe

# MODEL FOR INFERENCE
POST /_plugins/_ml/_predict/text_embedding/akQJLYYB2BgnpGRA2kJK
{
  "text_docs": ["what is a bank transit number"],
  "return_number": true,
  "target_response": ["sentence_embedding"]
}

# UNLOAD THE MODEL
POST /_plugins/_ml/models/akQJLYYB2BgnpGRA2kJK/_unload


#### AUXILIARY TOOLS ####
# GET ALL ML TASKS
GET /_plugins/_ml/tasks/_search
{
  "query": {
    "match_all": {}
  }
}

DELETE /_plugins/_ml/tasks/L7T4LIYBGGPddlEBksOz

## -----------------------------------------------------------------------------
## ------------- NEURAL SEARCH PIPELINE
# CREATE PIPELINE WITH ONE VECTOR FIELD
PUT /_ingest/pipeline/neural_pipeline
{
  "description": "An example neural search pipeline",
  "processors" : [
    {
      "text_embedding": {
        "model_id": "akQJLYYB2BgnpGRA2kJK",
        "field_map": {
           "general_text": "general_text_vector"
        }
      }
    }
  ]
}

# CREATE PIPELINE WITH TWO VECTOR FIELDS
PUT /_ingest/pipeline/neural_pipeline_2
{
  "description": "A second example neural search pipeline",
  "processors" : [
    {
      "text_embedding": {
        "model_id": "akQJLYYB2BgnpGRA2kJK",
        "field_map": {
           "general_text": "general_text_knn",
           "second_general_text": "second_general_text_knn"
        }
      }
    }
  ]
}

# GET PIPELINES
GET /_ingest/pipeline

## -----------------------------------------------------------------------------
## ------------- NEURAL INDEX
# CREATE INDEX WITH ONE VECTOR FIELD
PUT /my_neural_index
{
    "settings": {
        "index.knn": true,
        "default_pipeline": "neural_pipeline"
    },
    "mappings": {
        "properties": {
            "general_text_vector": {
                "type": "knn_vector",
                "dimension": 384,
                "method": {
                    "name": "hnsw",
                    "engine": "lucene"
                }
            },
            "general_text": { 
                "type": "text"            
            },
            "color": {
                "type": "text"
            }
        }
    }
}

# CREATE INDEX WITH TWO VECTOR FIELDS
PUT /my_neural_index_2
{
    "settings": {
        "index.knn": true,
        "default_pipeline": "neural_pipeline_2"
    },
    "mappings": {
        "properties": {
            "general_text_vector": {
                "type": "knn_vector",
                "dimension": 384,
                "method": {
                    "name": "hnsw",
                    "engine": "lucene"
                }
            },
            "general_text": { 
                "type": "text"            
            },
            "second_general_text": { 
                "type": "text"            
            },
            "color": {
                "type": "text"
            }
        }
    }
}

# PUSH DOCUMENTS
curl -XPOST 'localhost:9200/_bulk' -H 'Content-Type: application/json' --data-binary @collection_for_feeding.json

## -----------------------------------------------------------------------------
## ------------- QUERIES
# NEURAL QUERY
GET /my_neural_index/_search
{
  "_source": [
    "general_text",
    "color"
  ],
  "query": {
    "neural": {
      "general_text_vector": {
        "query_text": "what is a bank transit number",
        "model_id": "akQJLYYB2BgnpGRA2kJK",
        "k": 10
      }
    }
  }
}

# NEURAL QUERY + FILTER QUERY
GET /my_neural_index/_search
{
  "_source": [
    "color",
    "general_text"
  ],
  "query": {
    "bool": {
      "filter": {
        "term": {
          "color": "white"
        }
      },
      "must": {
        "neural": {
          "general_text_vector": {
            "query_text": "what is a bank transit number",
            "model_id": "akQJLYYB2BgnpGRA2kJK",
            "k": 8
          }
        }
      }
    }
  }
}

# FILTER QUERY
GET /my_neural_index/_search
{
  "_source": [
    "color",
    "general_text"
  ],
  "query": {
    "bool": {
      "filter": {
        "term": {
          "color": "white"
        }
      }
    }
    }
}